C51 COMPILER V9.54   LCD                                                                   01/14/2016 10:34:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\lib\lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\lcd.lst) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          
   3          extern bit  LCD_RS;
   4          extern bit  LCD_EN;
   5          extern data unsigned char LCD_DATA;
   6          
   7          void lcd_cmd(const unsigned char cmd) {
   8   1        LCD_RS   = 0;
   9   1        LCD_DATA = cmd;
  10   1        LCD_EN   = 0;
  11   1        LCD_EN   = 1;
  12   1        
  13   1        if (cmd == 0x01 || cmd == 0x02) {
  14   2          lcd_delay(2);
  15   2        } else {
  16   2          lcd_delay(1);
  17   2        }
  18   1      }
  19          
  20          void lcd_data(const unsigned char c) {
  21   1        LCD_RS   = 1;
  22   1        LCD_DATA = c;
  23   1        LCD_EN   = 0;
  24   1        LCD_EN   = 1;
  25   1        
  26   1        lcd_delay(1);
  27   1      }
  28          
  29          void lcd_init(unsigned char input_type, unsigned char cursor_type) {
  30   1        //clear screen
  31   1        lcd_cmd(0x01);
  32   1        
  33   1        switch(input_type) {
  34   2          case 1:
  35   2            lcd_cmd(0x38);    // 2lines - 8bit mode
  36   2            break;
  37   2          
  38   2          case 2:
  39   2            lcd_cmd(0x28);    // 2lines - 4bit mode
  40   2            break;
  41   2          
  42   2          default:
  43   2            lcd_cmd(0x38);
  44   2            break;
  45   2        }
  46   1        
  47   1        switch(cursor_type) {
  48   2          case 1:
  49   2            lcd_cmd(0x0E);    //display cursor
  50   2            break;
  51   2          
  52   2          case 2:
  53   2            lcd_cmd(0x0C);    //do not display cursor
  54   2            break;
C51 COMPILER V9.54   LCD                                                                   01/14/2016 10:34:23 PAGE 2   

  55   2          
  56   2          default:
  57   2            lcd_cmd(0x0E);
  58   2            break;
  59   2        }
  60   1      }
  61          
  62          void lcd_display_number(unsigned int number) {
  63   1        unsigned char data_arr[5];
  64   1        unsigned char i=0;
  65   1        
  66   1        if (number == 0) {
  67   2          lcd_data(number+0x30);
  68   2          return;
  69   2        }
  70   1        
  71   1        while (number != 0) {
  72   2          data_arr[i] = number%10;
  73   2          ++i;
  74   2          number /= 10;
  75   2        }
  76   1        --i;
  77   1        
  78   1        while (1) {
  79   2          lcd_data(data_arr[i]+0x30);
  80   2          if (i==0) {
  81   3            break;
  82   3          }
  83   2          --i;
  84   2        }
  85   1      }
  86          
  87          void lcd_display_string(const unsigned char *str) {
  88   1        unsigned int i=0;
  89   1        
  90   1        while (str[i] != '\0') {
  91   2          lcd_data(str[i++]);
  92   2        }
  93   1      }
  94          
  95          
  96          
  97          void lcd_cursor_move(const unsigned char row, const unsigned char col) {
  98   1        unsigned char offset = 0;
  99   1        unsigned char cmd    = 0x01;
 100   1      
 101   1        switch(row) {
 102   2          case 1:
 103   2            offset = 0x80;
 104   2            break;
 105   2          
 106   2          case 2:
 107   2            offset = 0xC0;
 108   2            break;
 109   2          
 110   2          default:
 111   2            break;
 112   2        }
 113   1        cmd = offset + col-1;
 114   1        lcd_cmd(cmd);
 115   1      }
 116          
C51 COMPILER V9.54   LCD                                                                   01/14/2016 10:34:23 PAGE 3   

 117          void lcd_move_to_line_beginer(const unsigned char type) {
 118   1        switch(type) {
 119   2          case 1:
 120   2            lcd_cmd(0x80);
 121   2            break;
 122   2          
 123   2          case 2:
 124   2            lcd_cmd(0xC0);
 125   2            break;
 126   2          
 127   2          default:
 128   2            break;
 129   2        }
 130   1      }
 131          
 132          void lcd_data_at(const unsigned char c, const unsigned char row, const unsigned char col) {
 133   1        lcd_cursor_move(row, col);
 134   1        lcd_cmd(c);
 135   1      }
 136          
 137          void lcd_display_number_at(const unsigned int number, const unsigned char row, const unsigned char col) {
 138   1        lcd_cursor_move(row, col);
 139   1        lcd_display_number(number);
 140   1      }
 141          
 142          void lcd_display_string_at(const unsigned char *str, const unsigned char row, const unsigned char col) {
 143   1        lcd_cursor_move(row, col);
 144   1        lcd_display_string(str);
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
